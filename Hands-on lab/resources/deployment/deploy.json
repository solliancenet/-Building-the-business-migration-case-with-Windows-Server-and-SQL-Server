{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.61.36676",
      "templateHash": "6653127986685198893"
    }
  },
  "parameters": {
    "resourceNameBase": {
      "type": "string",
      "defaultValue": "tailspin",
      "metadata": {
        "description": "The prefix base used to name resources created."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "onpremNamePrefix": "[format('{0}-onprem-', parameters('resourceNameBase'))]",
    "hubNamePrefix": "[format('{0}-hub-', parameters('resourceNameBase'))]",
    "spokeNamePrefix": "[format('{0}-spoke-', parameters('resourceNameBase'))]",
    "onpremSQLVMNamePrefix": "[format('{0}sql-', variables('onpremNamePrefix'))]",
    "onpremHyperVHostVMNamePrefix": "[format('{0}hyperv-', variables('onpremNamePrefix'))]",
    "GitHubScriptRepo": "solliancenet/Building-the-business-migration-case-with-Windows-Server-and-SQL-Server",
    "GitHubScriptRepoBranch": "lab",
    "GitHubScriptRepoBranchURL": "[format('https://raw.githubusercontent.com/{0}/{1}/Hands-on lab/resources/deployment/', variables('GitHubScriptRepo'), variables('GitHubScriptRepoBranch'))]",
    "HyperVHostConfigArchiveFileName": "create-vm.zip",
    "HyperVHostConfigArchiveScriptName": "create-vm.ps1",
    "HyperVHostConfigURL": "[format('{0}onprem/{1}', variables('GitHubScriptRepoBranchURL'), variables('HyperVHostConfigArchiveFileName'))]",
    "HyperVHostInstallHyperVScriptFolder": ".",
    "HyperVHostInstallHyperVScriptFileName": "install-hyper-v.ps1",
    "HyperVHostInstallHyperVURL": "[format('{0}onprem/{1}', variables('GitHubScriptRepoBranchURL'), variables('HyperVHostInstallHyperVScriptFileName'))]",
    "SQLVMConfigFileName": "sql-vm-config.zip",
    "SQLVMConfigScriptName": "sql-vm-config.ps1",
    "SQLVMConfigURL": "[format('{0}onprem/{1}', variables('GitHubScriptRepoBranchURL'), variables('SQLVMConfigFileName'))]",
    "labUsername": "demouser",
    "labPassword": "demo!pass123",
    "tags": {
      "purpose": "MCW"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}vnet', variables('onpremNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}vnet', variables('hubNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "hub",
            "properties": {
              "addressPrefix": "10.1.0.0/24"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "10.1.1.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}vnet', variables('spokeNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.2.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/hub-onprem', format('{0}vnet', variables('hubNamePrefix')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix')))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/onprem-hub', format('{0}vnet', variables('onpremNamePrefix')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix')))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/spoke-hub', format('{0}vnet', variables('spokeNamePrefix')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix')))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "remoteAddressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('spokeNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}bastion', variables('hubNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}bastion-pip', variables('hubNamePrefix')))]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/AzureBastionSubnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix'))))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}bastion-pip', variables('hubNamePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('hubNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}bastion-pip', variables('hubNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}nic', variables('onpremHyperVHostVMNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[format('{0}/subnets/default', resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix'))))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', variables('onpremHyperVHostVMNamePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', variables('onpremHyperVHostVMNamePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "name": "[format('{0}nsg', variables('onpremHyperVHostVMNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[format('{0}vm', variables('onpremHyperVHostVMNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4s_v5"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage"
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-datacenter-gensecond",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic', variables('onpremHyperVHostVMNamePrefix')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "WinServer",
          "adminUsername": "[variables('labUsername')]",
          "adminPassword": "[variables('labPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic', variables('onpremHyperVHostVMNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2017-12-01",
      "name": "[format('{0}/InstallHyperV', format('{0}vm', variables('onpremHyperVHostVMNamePrefix')))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('HyperVHostInstallHyperVURL')]"
          ],
          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0}/{1}', variables('HyperVHostInstallHyperVScriptFolder'), variables('HyperVHostInstallHyperVScriptFileName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm', variables('onpremHyperVHostVMNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2017-12-01",
      "name": "[format('{0}/CreateWinServerVM', format('{0}vm', variables('onpremHyperVHostVMNamePrefix')))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[variables('HyperVHostConfigURL')]",
            "script": "[variables('HyperVHostConfigArchiveScriptName')]",
            "function": "Main"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm', variables('onpremHyperVHostVMNamePrefix')))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', split(format('{0}/InstallHyperV', format('{0}vm', variables('onpremHyperVHostVMNamePrefix'))), '/')[0], split(format('{0}/InstallHyperV', format('{0}vm', variables('onpremHyperVHostVMNamePrefix'))), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}nic', variables('onpremSQLVMNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[format('{0}/subnets/default', resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix'))))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', variables('onpremSQLVMNamePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}nsg', variables('onpremSQLVMNamePrefix')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet', variables('onpremNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "name": "[format('{0}nsg', variables('onpremSQLVMNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[format('{0}vm', variables('onpremSQLVMNamePrefix'))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4s_v5"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage"
          },
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2012SP4-WS2012R2",
            "sku": "Standard",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic', variables('onpremSQLVMNamePrefix')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "SQLServer",
          "adminUsername": "[variables('labUsername')]",
          "adminPassword": "[variables('labPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}nic', variables('onpremSQLVMNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2017-12-01",
      "name": "[format('{0}/SQLVMConfig', format('{0}vm', variables('onpremSQLVMNamePrefix')))]",
      "location": "[variables('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[variables('SQLVMConfigURL')]",
            "script": "[variables('SQLVMConfigScriptName')]",
            "function": "Main"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}vm', variables('onpremSQLVMNamePrefix')))]"
      ]
    }
  ]
}